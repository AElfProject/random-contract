syntax = "proto3";
import "aelf/options.proto";
import "aelf/core.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "Protobuf/reference/acs12.proto";
option csharp_namespace = "AElf.Contracts.RandomContract";
service RandomContract {
  option (aelf.csharp_state) = "AElf.Contracts.RandomContract.RandomContractState";
  option (aelf.base) = "Protobuf/reference/acs12.proto";

  rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
  }
  rpc SetAdmin (aelf.Address) returns (google.protobuf.Empty) {
  }
  rpc SetMaxValueLimit (google.protobuf.Int32Value) returns (google.protobuf.Empty) {
  }
  rpc SetMaxRandomNumberCount (google.protobuf.Int32Value) returns (google.protobuf.Empty) {
  }
  rpc GenerateRandomNumber (GenerateRandomNumberInput) returns (google.protobuf.Empty) {
  }
  rpc GetAdmin (google.protobuf.Empty) returns (aelf.Address) {
    option (aelf.is_view) = true;
  }
  rpc GetMaxValueLimit (google.protobuf.Empty) returns (google.protobuf.Int32Value) {
    option (aelf.is_view) = true;
  }
  rpc GetMaxRandomNumberCount (google.protobuf.Empty) returns (google.protobuf.Int32Value) {
    option (aelf.is_view) = true;
  }
  rpc GetRandomNumber (GetRandomNumberInput) returns (RandomNumberList) {
    option (aelf.is_view) = true;
  }
}

message InitializeInput {
  int32 max_value_limit = 1;
  int32 max_random_number_count = 2;
}

message GenerateRandomNumberInput {
  string hash = 1;
  int32 max_value = 2;
  int32 random_number_count = 3;
}

message GetRandomNumberInput {
  string hash = 1;
}

message RandomNumberList {
  repeated int32 value = 1;
}

message RandomNumberGenerated {
  option (aelf.is_event) = true;
  RandomNumberList random_numbers = 1;
}
